{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAcC,SAASC,cAAc,SACxBD,SAASC,cAAc,wBACxBD,SAASC,cAAc,uBACrBD,SAASC,cAAc,yBAEzBD,SAASC,cAAc,2BAEzCF,EAAYG,iBAAiB,UAAUC,IACrCC,EAAAP,GAASQ,OAAOC,QAAQH,EAAEI,OAAO,UAGXC,KAAKC,UAS1BC,MAAK,EAACC,SAAEA,EAAQC,MAAEA,MACjBR,EAAAP,GAASQ,OAAOC,QAAQ,uBAAqBK,QAAiBC,MAAU,IAEzEC,OAAM,EAACF,SAAEA,EAAQC,MAAEA,MAClBR,EAAAP,GAASQ,OAAOS,QAAQ,sBAAoBH,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst promiseForm = document.querySelector('.form');\nconst delayInput = document.querySelector('input[name= \"delay\"]');\nconst stepInput = document.querySelector('input[name= \"step\"]');\nconst amountInput = document.querySelector('input[name= \"amount\"]');\n\nconst submitBtn = document.querySelector('button[type = \"submit\"]');\n\npromiseForm.addEventListener('submit', e => {\n  Notiflix.Notify.success(e.target);\n});\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$promiseForm","document","querySelector","addEventListener","e","$parcel$interopDefault","Notify","success","target","Math","random","then","position","delay","catch","failure"],"version":3,"file":"03-promises.294be308.js.map"}